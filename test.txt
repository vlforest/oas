<script setup>
import AuthenticatedLayout from '@/Layouts/AuthenticatedLayout.vue';
import { Head } from '@inertiajs/vue3';
import { ref, defineProps, onMounted } from 'vue';
import { useForm, usePage, router } from '@inertiajs/vue3';
import DangerButton from '@/Components/DangerButton.vue';
import SecondaryButton from '@/Components/SecondaryButton.vue'; // Bá»• sung import
import Switcher from '@/Components/Switcher.vue';
import toastr from 'toastr';
import 'toastr/build/toastr.min.css';

// Define props
const props = defineProps({
    users: Array,
    flash: Object,
});

const users = ref(props.users);
const form = useForm({});
const showConfirmDeleteModal = ref(false);
const userToDelete = ref(null);

onMounted(() => {
    const pageProps = usePage().props.value;
    if (pageProps && pageProps.flash) {
        const flash = pageProps.flash;
        if (flash.success) {
            toastr.success(flash.success);
        }
        if (flash.error) {
            toastr.error(flash.error);
        }
    }
});

function toggleRole(user, newRole) {
    router.patch(route('users.update', user.id), {
        role: newRole ? 'Verified' : 'Pending',
    }, {
        onSuccess: () => {
            // Update the user's role in the users list
            const index = users.value.findIndex(u => u.id === user.id);
            if (index !== -1) {
                users.value[index].role = newRole ? 'Verified' : 'Pending';
            }
            toastr.success('User role updated successfully.');
        },
        onError: () => {
            toastr.error('Failed to update user role.');
        },
    });
}

function confirmDeleteUser(user) {
    userToDelete.value = user;
    showConfirmDeleteModal.value = true;
}

function deleteUser() {
    if (userToDelete.value) {
        router.delete(route('users.destroy', userToDelete.value.id), {
            onSuccess: () => {
                // Remove the user from the users list
                const index = users.value.findIndex(u => u.id === userToDelete.value.id);
                if (index !== -1) {
                    users.value.splice(index, 1);
                }
                toastr.success('User deleted successfully.');
                showConfirmDeleteModal.value = false;
            },
            onError: () => {
                toastr.error('Failed to delete user.');
            },
        });
    }
}
</script>
<template>
    <Head title="User Management" />

    <AuthenticatedLayout>
        <template #header>
            <h2 class="text-xl font-semibold leading-tight text-gray-800">
                User Management
            </h2>
        </template>

        <div class="py-12">
            <div class="mx-auto max-w-7xl sm:px-6 lg:px-8">
                <div class="overflow-hidden bg-white shadow-sm sm:rounded-lg">
                    <div class="p-6 text-gray-900">
                        <table class="min-w-full leading-normal">
                            <thead>
                                <tr>
                                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Name</th>
                                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Email</th>
                                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Status</th>
                                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="user in users" :key="user.id">
                                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">{{ user.name }}</td>
                                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">{{ user.email }}</td>
                                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                                        <Switcher :modelValue="user.role === 'Verified'" @update:modelValue="newRole => toggleRole(user, newRole)" />
                                    </td>
                                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                                        <DangerButton @click="confirmDeleteUser(user)">
                                            <i class="material-icons align-middle me-1">delete</i>
                                            Delete
                                        </DangerButton>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Confirmation Modal for deleting user -->
        <div v-if="showConfirmDeleteModal" class="fixed inset-0 flex items-center justify-center z-50">
            <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
            <div class="bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:max-w-md sm:w-full">
                <div class="px-4 py-5 sm:p-6">
                    <h3 class="text-lg leading-6 font-medium text-gray-900">Confirm Deletion</h3>
                    <p class="mt-2 text-sm text-gray-600">Are you sure you want to delete this user?</p>
                    <div class="mt-4 flex items-center justify-end">
                        <SecondaryButton type="button" @click="showConfirmDeleteModal = false" class="me-2">
                            <i class="material-icons align-middle me-1">cancel</i>
                            Cancel
                        </SecondaryButton>
                        <DangerButton type="button" @click="deleteUser">
                            <i class="material-icons align-middle me-1">delete</i>
                            Delete
                        </DangerButton>
                    </div>
                </div>
            </div>
        </div>
    </AuthenticatedLayout>
</template>
